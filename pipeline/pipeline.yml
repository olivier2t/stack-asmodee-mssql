# YAML anchors
shared:
# Task : sync and merge with rsync 2 rep. Used to merge stack and config
- &merge-stack-and-config
  platform: linux
  image_resource:
    type: registry-image
    source:
      repository: cycloid/cycloid-toolkit
      tag: latest
  run:
    path: /usr/bin/merge-stack-and-config


resource_types:
- name: terraform
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    tag: ((terraform_version))

# Allow to send custom events to Cycloid from this pipeline
- name: cycloid-events
  type: registry-image
  source:
    repository: cycloid/cycloid-events-resource
    tag: latest


resources:
- name: tfstate
  type: terraform
  icon: terraform
  source:
    env_name: ((env))
    backend_type: azurerm
    backend_config:
      container_name: ((terraform_storage_container_name))
      key: ((terraform_storage_container_path))/((project))-((env)).tfstate
      resource_group_name: ((terraform_resource_group_name))
      storage_account_name: ((terraform_storage_account_name))
      access_key: ((terraform_storage_access_key))
    vars:
      azure_location: ((azure_location))
      azure_env: ((azure_env))
      azure_client_id: ((azure_client_id))
      azure_client_secret: ((azure_client_secret))
      azure_subscription_id: ((azure_subscription_id))
      azure_tenant_id: ((azure_tenant_id))
      env: ((env))
      project: ((project))
      customer: ((customer))

# The Terraform stack (will be merged with the config)
- name: git_stack-terraform
  type: git
  icon: git
  source:
    uri: ((stack_git_repository))
    branch: ((stack_git_branch))
    private_key: ((stack_git_private_key))
    paths:
      - ((stack_terraform_path))/*

# The Terraform config (will be merged with the stack)
- name: git_config-terraform
  type: git
  icon: git
  source:
    uri: ((config_git_repository))
    branch: ((config_git_branch))
    private_key: ((config_git_private_key))
    paths:
      - ((config_terraform_path))/*

# The Ansible stack (will be merged with the config)
# - name: git_stack-ansible
#   type: git
#   icon: git
#   source:
#     uri: ((stack_git_repository))
#     branch: ((stack_git_branch))
#     private_key: ((stack_git_private_key))
#     paths:
#       - ((stack_ansible_path))/*

# The Ansible config (will be merged with the stack)
# - name: git_config-ansible
#   type: git
#   icon: git
#   source:
#     uri: ((config_git_repository))
#     branch: ((config_git_branch))
#     private_key: ((config_git_private_key))
#     paths:
#       - ((config_ansible_path))/*

# The Cycloid event resource to log events
- name: cycloid-event
  type: cycloid-events
  source:
    api_key: ((cycloid_api_key))
    api_url: ((cycloid_api_url))
    icon: fa-code-branch
    organization: ((customer))
    severity: info
    type: Custom
    tags:
      - key: project
        value: ((project))
      - key: env
        value: ((env))
  icon: calendar


groups:
- name: overview
  jobs:
    - terraform-plan
    - terraform-apply
    # - deploy-nexus
    
- name: destroy
  jobs:
    - terraform-destroy


jobs:
  # Merge and trigger a plan whenever there is a commit in Terraform stack or config
  - name: terraform-plan
    serial: true
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - in_parallel:
        - get: git_stack-terraform
          trigger: true

        - get: git_config-terraform
          trigger: true

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
          outputs:
          - name: merged-stack
            path: "merged-stack"
        params:
          CONFIG_PATH: ((config_terraform_path))
          STACK_PATH: ((stack_terraform_path))

      - put: tfstate
        params:
          plan_only: true
          terraform_source: merged-stack/


  # Merge and trigger an apply whenever there is a terraform plan passed successfully
  - name: terraform-apply
    serial: true
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - in_parallel:
        - get: git_stack-terraform
          trigger: false
          passed:
            - terraform-plan

        - get: git_config-terraform
          trigger: false
          passed:
            - terraform-plan

        - get: tfstate
          trigger: true
          passed:
            - terraform-plan

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
          outputs:
          - name: merged-stack
            path: "merged-stack"
        params:
          CONFIG_PATH: ((config_terraform_path))
          STACK_PATH: ((stack_terraform_path))

      - put: tfstate
        params:
          plan_run: true
          terraform_source: merged-stack/


  # - name: deploy-nexus
  #   serial: true
  #   build_logs_to_retain: 10
  #   plan:
  #     - in_parallel:
  #       - get: git_stack-ansible
  #         trigger: true

  #       - get: git_config-ansible
  #         trigger: true

  #       - get: tfstate
  #         trigger: true
  #         passed:
  #           - terraform-apply

  #     - task: merge-stack-and-config
  #       config:
  #         <<: *merge-stack-and-config
  #         inputs:
  #         - name: git_config-ansible
  #           path: "config"
  #         - name: git_stack-ansible
  #           path: "stack"
  #         - name: tfstate
  #           path: "terraform"
  #         outputs:
  #         - name: merged-stack
  #           path: "merged-stack"
  #         - name: output-var
  #           path: "output-var"
  #       params:
  #         CONFIG_PATH: ((config_ansible_path))
  #         STACK_PATH: ((stack_ansible_path))

  #     - task: run-ansible
  #       config:
  #         platform: linux
  #         image_resource:
  #           type: registry-image
  #           source:
  #             repository: cycloid/cycloid-toolkit
  #             tag: ((ansible_version))
  #         run:
  #           path: /usr/bin/ansible-runner
  #         caches:
  #           - path: ansible-playbook/roles
  #         inputs:
  #         - name: merged-stack
  #           path: ansible-playbook
  #       params:
  #         #+ Parameters of ansible-runner script. Can be found here: https://github.com/cycloidio/docker-cycloid-toolkit#ansible-runner
  #         ANSIBLE_REMOTE_USER: ((vm_os_user))
  #         SSH_PRIVATE_KEY: ((keypair_private))
  #         AZURE_USE_PRIVATE_IP: False # Force to connect to public IP because we don't use a bastion in this stack
  #         AZURE_SUBSCRIPTION_ID: ((azure_subscription_id))
  #         AZURE_TENANT_ID: ((azure_tenant_id))
  #         AZURE_TENANT: ((azure_tenant_id))
  #         AZURE_CLIENT_ID: ((azure_client_id))
  #         AZURE_SECRET: ((azure_client_secret))
  #         ANSIBLE_PLAYBOOK_PATH: ansible-playbook
  #         ANSIBLE_PLAYBOOK_NAME: site.yml
  #         ANSIBLE_EXTRA_VARS:
  #           env: ((env))
  #           project: ((project))
  #           customer: ((customer))

        on_success:
          do:
            - put: cycloid-event
              params:
                vars_file: merged-stack/group_vars/all
                severity: info
                message: The project ((project)) on ((env)) environment deployed successfully
                title: The project ((project)) on ((env)) environment deployed successfully


  # Destroy the infrastructure
  - name: terraform-destroy
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - in_parallel:
        - get: git_stack-terraform
          trigger: false
          passed:
            - terraform-plan

        - get: git_config-terraform
          trigger: false
          passed:
            - terraform-plan

        - get: tfstate
          trigger: false
          passed:
            - terraform-apply

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
          outputs:
          - name: merged-stack
            path: "merged-stack"
        params:
          CONFIG_PATH: ((config_terraform_path))
          STACK_PATH: ((stack_terraform_path))

      - put: tfstate
        params:
          action: destroy
          terraform_source: merged-stack/
        get_params:
          action: destroy
